{"version":3,"sources":["webpack:///./src/views/Users.vue?de85","webpack:///./src/components/userList.vue?63c6","webpack:///./src/components/userList/userRow.vue?a78d","webpack:///./src/components/popoverMenu.vue?6abc","webpack:///./src/components/popoverMenu/popoverItem.vue?e129","webpack:///src/components/popoverMenu/popoverItem.vue","webpack:///./src/components/popoverMenu/popoverItem.vue?1583","webpack:///./src/components/popoverMenu/popoverItem.vue","webpack:///./src/components/popoverMenu.vue?295a","webpack:///src/components/popoverMenu.vue","webpack:///./src/components/popoverMenu.vue","webpack:///src/components/userList/userRow.vue","webpack:///./src/components/userList/userRow.vue?30fd","webpack:///./src/components/userList/userRow.vue","webpack:///./src/components/userList.vue?c685","webpack:///src/components/userList.vue","webpack:///./src/components/userList.vue","webpack:///src/views/Users.vue","webpack:///./src/views/Users.vue?bea8","webpack:///./src/views/Users.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","app-name","slot","button-id","text","t","button-class","on","click","toggleNewUserMenu","_v","id","_l","menu","item","key","_s","staticClass","value","defaultQuota","options","quotaOptions","tag-placeholder","placeholder","label","track-by","allowEmpty","taggable","tag","validateQuota","input","setDefaultQuota","directives","name","rawName","showLanguages","expression","type","domProps","checked","Array","isArray","_i","change","$event","$$a","$$el","target","$$c","$$i","concat","slice","for","showLastLogin","showUserBackend","showStoragePath","users","showConfig","selectedGroup","externalActions","_withStripped","userListvue_type_template_id_40745299_render","&scroll","onScroll","class","sticky","scrolled","showNewUserForm","subAdminsGroups","length","settings","isAdmin","_e","disabled","loading","all","submit","preventDefault","createUser","newUser","ref","required","autocomplete","autocapitalize","autocorrect","pattern","composing","$set","displayName","password","mailAddress","minlength","minPasswordLength","icon-loading-small","groups","tabindex","canAddGroups","multiple","close-on-select","createGroup","model","callback","$$v","quota","languages","group-values","group-label","language","title","filteredUsers","user","infinite","infiniteHandler","userRowvue_type_template_id_d19586ce_render","Object","keys","data-id","delete","disable","alt","width","height","src","generateAvatar","srcset","updateDisplayName","backendCapabilities","setDisplayName","rand","spellcheck","displayname","modifiers","auto","canChangePassword","setPassword","updatePassword","updateEmail","email","userGroups","availableGroups","limit","closeOnSelect","select","addUserGroup","remove","removeUserGroup","formatGroupsTitle","subadmins","userSubAdminsGroups","addUserSubAdmin","removeUserSubAdmin","usedSpace","userQuota","setUserQuota","warn","usedQuota","max","userLanguage","setUserLanguage","storageLocation","backend","lastLogin","OC","Util","formatDate","relativeModifiedDate","currentUser","hideMenu","toggleMenu","open","openedMenu","userActions","style","opacity","feedbackMessage","popoverMenuvue_type_template_id_04ea21c4_render","popoverItemvue_type_template_id_4c6af9e6_render","href","rel","action","icon","longtext","popoverMenu_popoverItemvue_type_script_lang_js_","props","component","componentNormalizer","__file","components_popoverMenuvue_type_script_lang_js_","components","popoverItem","popoverMenu_component","popoverMenu","vue_runtime_esm","use","v_tooltip_esm","userList_userRowvue_type_script_lang_js_","Multiselect","vue_multiselect_min_default","a","ClickOutside","vue_click_outside_default","mounted","data","parseInt","Math","random","computed","actions","deleteUser","enabled","enableDisableUser","push","sendWelcomeMail","_this","filter","group","includes","_this2","subadmin","_this3","map","groupClone","assign","$isDisabled","canAdd","canRemove","used","size","humanFileSize","min","round","pow","isNaN","humanQuota","find","$store","getters","getPasswordPolicyMinLength","_this4","userLang","lang","code","_typeof","methods","arguments","undefined","generateUrl","version","oc_userconfig","avatar","join","_this5","userid","dispatch","then","_this6","_this7","$refs","_this8","_this9","gid","_this10","catch","getGroups","_this11","_this12","$route","params","commit","_this13","_this14","_this15","validQuota","computerFileSize","_this16","_this17","success","setTimeout","userRow_component","userRow","components_userListvue_type_script_lang_js_","InfiniteLoading","vue_infinite_loading_default","unlimitedQuota","searchQuery","Notification","showTemporary","set","defaultLanguage","setNewUserDefaultGroup","userSearch","OCA","Search","search","resetSearch","getServerData","disabledUsers","infiniteLoading","isComplete","$router","$emit","oc_current_user","sort","b","localeCompare","getSubadminGroups","quotaPreset","reduce","acc","cur","unshift","usersOffset","getUsersOffset","usersLimit","getUsersLimit","commonlanguages","watch","val","old","event","scrollTo","$state","offset","response","loaded","complete","query","resetForm","$options","call","error","ocs","meta","statuscode","newusername","focus","newuserpassword","currentGroup","userList_component","userList","vue_local_storage_default","views_Usersvue_type_script_lang_js_","AppContent","ncvuecomponents","AppNavigationItem","AppNavigationNew","AppNavigationSettings","beforeMount","orderBy","sortGroups","userCount","created","Settings","UserList","registerAction","selectedQuota","showAddGroupEntry","loadingAddGroup","nextTick","window","getLocalstorage","localConfig","$localStorage","get","setLocalStorage","status","removeGroup","groupid","self","dialogs","confirm","app","Usersvue_type_script_lang_js_typeof","getUsers","getUserCount","realGroups","replace","utils","router","usercount","counter","separator","caption","adminGroup","disabledGroup","indexOf","everyoneGroup","addGroup","classes","reset","Users_component","__webpack_exports__"],"mappings":"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","file":"vue-6.js","sourcesContent":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"AppContent\",\n    { attrs: { \"app-name\": \"settings\" } },\n    [\n      _c(\n        \"template\",\n        { slot: \"navigation\" },\n        [\n          _c(\"AppNavigationNew\", {\n            attrs: {\n              \"button-id\": \"new-user-button\",\n              text: _vm.t(\"settings\", \"New user\"),\n              \"button-class\": \"icon-add\"\n            },\n            on: { click: _vm.toggleNewUserMenu }\n          }),\n          _vm._v(\" \"),\n          _c(\n            \"ul\",\n            { attrs: { id: \"usergrouplist\" } },\n            _vm._l(_vm.menu, function(item) {\n              return _c(\"AppNavigationItem\", {\n                key: item.key,\n                attrs: { item: item }\n              })\n            }),\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\"AppNavigationSettings\", [\n            _c(\n              \"div\",\n              [\n                _c(\"p\", [_vm._v(_vm._s(_vm.t(\"settings\", \"Default quota:\")))]),\n                _vm._v(\" \"),\n                _c(\"multiselect\", {\n                  staticClass: \"multiselect-vue\",\n                  attrs: {\n                    value: _vm.defaultQuota,\n                    options: _vm.quotaOptions,\n                    \"tag-placeholder\": \"create\",\n                    placeholder: _vm.t(\"settings\", \"Select default quota\"),\n                    label: \"label\",\n                    \"track-by\": \"id\",\n                    allowEmpty: false,\n                    taggable: true\n                  },\n                  on: { tag: _vm.validateQuota, input: _vm.setDefaultQuota }\n                })\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\"div\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.showLanguages,\n                    expression: \"showLanguages\"\n                  }\n                ],\n                staticClass: \"checkbox\",\n                attrs: { type: \"checkbox\", id: \"showLanguages\" },\n                domProps: {\n                  checked: Array.isArray(_vm.showLanguages)\n                    ? _vm._i(_vm.showLanguages, null) > -1\n                    : _vm.showLanguages\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.showLanguages,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.showLanguages = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.showLanguages = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.showLanguages = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"showLanguages\" } }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Show Languages\")))\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.showLastLogin,\n                    expression: \"showLastLogin\"\n                  }\n                ],\n                staticClass: \"checkbox\",\n                attrs: { type: \"checkbox\", id: \"showLastLogin\" },\n                domProps: {\n                  checked: Array.isArray(_vm.showLastLogin)\n                    ? _vm._i(_vm.showLastLogin, null) > -1\n                    : _vm.showLastLogin\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.showLastLogin,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.showLastLogin = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.showLastLogin = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.showLastLogin = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"showLastLogin\" } }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Show last login\")))\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.showUserBackend,\n                    expression: \"showUserBackend\"\n                  }\n                ],\n                staticClass: \"checkbox\",\n                attrs: { type: \"checkbox\", id: \"showUserBackend\" },\n                domProps: {\n                  checked: Array.isArray(_vm.showUserBackend)\n                    ? _vm._i(_vm.showUserBackend, null) > -1\n                    : _vm.showUserBackend\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.showUserBackend,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.showUserBackend = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.showUserBackend = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.showUserBackend = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"showUserBackend\" } }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Show user backend\")))\n              ])\n            ]),\n            _vm._v(\" \"),\n            _c(\"div\", [\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.showStoragePath,\n                    expression: \"showStoragePath\"\n                  }\n                ],\n                staticClass: \"checkbox\",\n                attrs: { type: \"checkbox\", id: \"showStoragePath\" },\n                domProps: {\n                  checked: Array.isArray(_vm.showStoragePath)\n                    ? _vm._i(_vm.showStoragePath, null) > -1\n                    : _vm.showStoragePath\n                },\n                on: {\n                  change: function($event) {\n                    var $$a = _vm.showStoragePath,\n                      $$el = $event.target,\n                      $$c = $$el.checked ? true : false\n                    if (Array.isArray($$a)) {\n                      var $$v = null,\n                        $$i = _vm._i($$a, $$v)\n                      if ($$el.checked) {\n                        $$i < 0 && (_vm.showStoragePath = $$a.concat([$$v]))\n                      } else {\n                        $$i > -1 &&\n                          (_vm.showStoragePath = $$a\n                            .slice(0, $$i)\n                            .concat($$a.slice($$i + 1)))\n                      }\n                    } else {\n                      _vm.showStoragePath = $$c\n                    }\n                  }\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"label\", { attrs: { for: \"showStoragePath\" } }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Show storage path\")))\n              ])\n            ])\n          ])\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"template\",\n        { slot: \"content\" },\n        [\n          _c(\"user-list\", {\n            attrs: {\n              users: _vm.users,\n              showConfig: _vm.showConfig,\n              selectedGroup: _vm.selectedGroup,\n              externalActions: _vm.externalActions\n            }\n          })\n        ],\n        1\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass: \"user-list-grid\",\n      attrs: { id: \"app-content\" },\n      on: {\n        \"&scroll\": function($event) {\n          return _vm.onScroll($event)\n        }\n      }\n    },\n    [\n      _c(\n        \"div\",\n        {\n          staticClass: \"row\",\n          class: { sticky: _vm.scrolled && !_vm.showConfig.showNewUserForm },\n          attrs: { id: \"grid-header\" }\n        },\n        [\n          _c(\"div\", { staticClass: \"avatar\", attrs: { id: \"headerAvatar\" } }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\", attrs: { id: \"headerName\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Username\")))\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"displayName\", attrs: { id: \"headerDisplayName\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Display name\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"password\", attrs: { id: \"headerPassword\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Password\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"mailAddress\", attrs: { id: \"headerAddress\" } },\n            [_vm._v(_vm._s(_vm.t(\"settings\", \"Email\")))]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"groups\", attrs: { id: \"headerGroups\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Groups\")))\n          ]),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                { staticClass: \"subadmins\", attrs: { id: \"headerSubAdmins\" } },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Group admin for\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"quota\", attrs: { id: \"headerQuota\" } }, [\n            _vm._v(_vm._s(_vm.t(\"settings\", \"Quota\")))\n          ]),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                { staticClass: \"languages\", attrs: { id: \"headerLanguages\" } },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Language\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\n                \"div\",\n                { staticClass: \"headerStorageLocation storageLocation\" },\n                [_vm._v(_vm._s(_vm.t(\"settings\", \"Storage location\")))]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"headerUserBackend userBackend\" }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"User backend\")))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\"div\", { staticClass: \"headerLastLogin lastLogin\" }, [\n                _vm._v(_vm._s(_vm.t(\"settings\", \"Last login\")))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"form\",\n        {\n          directives: [\n            {\n              name: \"show\",\n              rawName: \"v-show\",\n              value: _vm.showConfig.showNewUserForm,\n              expression: \"showConfig.showNewUserForm\"\n            }\n          ],\n          staticClass: \"row\",\n          class: { sticky: _vm.scrolled && _vm.showConfig.showNewUserForm },\n          attrs: { id: \"new-user\", disabled: _vm.loading.all },\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n              return _vm.createUser($event)\n            }\n          }\n        },\n        [\n          _c(\"div\", {\n            class: _vm.loading.all ? \"icon-loading-small\" : \"icon-add\"\n          }),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.id,\n                  expression: \"newUser.id\"\n                }\n              ],\n              ref: \"newusername\",\n              attrs: {\n                id: \"newusername\",\n                type: \"text\",\n                required: \"\",\n                placeholder: _vm.t(\"settings\", \"Username\"),\n                name: \"username\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\",\n                pattern: \"[a-zA-Z0-9 _\\\\.@\\\\-']+\"\n              },\n              domProps: { value: _vm.newUser.id },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"id\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"displayName\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.displayName,\n                  expression: \"newUser.displayName\"\n                }\n              ],\n              attrs: {\n                id: \"newdisplayname\",\n                type: \"text\",\n                placeholder: _vm.t(\"settings\", \"Display name\"),\n                name: \"displayname\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\"\n              },\n              domProps: { value: _vm.newUser.displayName },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"displayName\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"password\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.password,\n                  expression: \"newUser.password\"\n                }\n              ],\n              ref: \"newuserpassword\",\n              attrs: {\n                id: \"newuserpassword\",\n                type: \"password\",\n                required: _vm.newUser.mailAddress === \"\",\n                placeholder: _vm.t(\"settings\", \"Password\"),\n                name: \"password\",\n                autocomplete: \"new-password\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\",\n                minlength: _vm.minPasswordLength\n              },\n              domProps: { value: _vm.newUser.password },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"password\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"mailAddress\" }, [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.newUser.mailAddress,\n                  expression: \"newUser.mailAddress\"\n                }\n              ],\n              attrs: {\n                id: \"newemail\",\n                type: \"email\",\n                required: _vm.newUser.password === \"\",\n                placeholder: _vm.t(\"settings\", \"Email\"),\n                name: \"email\",\n                autocomplete: \"off\",\n                autocapitalize: \"none\",\n                autocorrect: \"off\"\n              },\n              domProps: { value: _vm.newUser.mailAddress },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.newUser, \"mailAddress\", $event.target.value)\n                }\n              }\n            })\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"groups\" },\n            [\n              !_vm.settings.isAdmin\n                ? _c(\"input\", {\n                    class: { \"icon-loading-small\": _vm.loading.groups },\n                    attrs: {\n                      type: \"text\",\n                      tabindex: \"-1\",\n                      id: \"newgroups\",\n                      required: !_vm.settings.isAdmin\n                    },\n                    domProps: { value: _vm.newUser.groups }\n                  })\n                : _vm._e(),\n              _vm._v(\" \"),\n              _c(\n                \"multiselect\",\n                {\n                  staticClass: \"multiselect-vue\",\n                  attrs: {\n                    options: _vm.canAddGroups,\n                    disabled: _vm.loading.groups || _vm.loading.all,\n                    \"tag-placeholder\": \"create\",\n                    placeholder: _vm.t(\"settings\", \"Add user in group\"),\n                    label: \"name\",\n                    \"track-by\": \"id\",\n                    multiple: true,\n                    taggable: true,\n                    \"close-on-select\": false\n                  },\n                  on: { tag: _vm.createGroup },\n                  model: {\n                    value: _vm.newUser.groups,\n                    callback: function($$v) {\n                      _vm.$set(_vm.newUser, \"groups\", $$v)\n                    },\n                    expression: \"newUser.groups\"\n                  }\n                },\n                [\n                  _c(\n                    \"span\",\n                    { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                    [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                { staticClass: \"subadmins\" },\n                [\n                  _c(\n                    \"multiselect\",\n                    {\n                      staticClass: \"multiselect-vue\",\n                      attrs: {\n                        options: _vm.subAdminsGroups,\n                        placeholder: _vm.t(\"settings\", \"Set user as admin for\"),\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        multiple: true,\n                        \"close-on-select\": false\n                      },\n                      model: {\n                        value: _vm.newUser.subAdminsGroups,\n                        callback: function($$v) {\n                          _vm.$set(_vm.newUser, \"subAdminsGroups\", $$v)\n                        },\n                        expression: \"newUser.subAdminsGroups\"\n                      }\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                        [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"quota\" },\n            [\n              _c(\"multiselect\", {\n                staticClass: \"multiselect-vue\",\n                attrs: {\n                  options: _vm.quotaOptions,\n                  placeholder: _vm.t(\"settings\", \"Select user quota\"),\n                  label: \"label\",\n                  \"track-by\": \"id\",\n                  allowEmpty: false,\n                  taggable: true\n                },\n                on: { tag: _vm.validateQuota },\n                model: {\n                  value: _vm.newUser.quota,\n                  callback: function($$v) {\n                    _vm.$set(_vm.newUser, \"quota\", $$v)\n                  },\n                  expression: \"newUser.quota\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                { staticClass: \"languages\" },\n                [\n                  _c(\"multiselect\", {\n                    staticClass: \"multiselect-vue\",\n                    attrs: {\n                      options: _vm.languages,\n                      placeholder: _vm.t(\"settings\", \"Default language\"),\n                      label: \"name\",\n                      \"track-by\": \"code\",\n                      allowEmpty: false,\n                      \"group-values\": \"languages\",\n                      \"group-label\": \"label\"\n                    },\n                    model: {\n                      value: _vm.newUser.language,\n                      callback: function($$v) {\n                        _vm.$set(_vm.newUser, \"language\", $$v)\n                      },\n                      expression: \"newUser.language\"\n                    }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\"div\", { staticClass: \"storageLocation\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"userBackend\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\"div\", { staticClass: \"lastLogin\" })\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" }, [\n            _c(\"input\", {\n              staticClass: \"button primary icon-checkmark-white has-tooltip\",\n              attrs: {\n                type: \"submit\",\n                id: \"newsubmit\",\n                value: \"\",\n                title: _vm.t(\"settings\", \"Add a new user\")\n              }\n            })\n          ])\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm._l(_vm.filteredUsers, function(user, key) {\n        return _c(\"user-row\", {\n          key: key,\n          attrs: {\n            user: user,\n            settings: _vm.settings,\n            showConfig: _vm.showConfig,\n            groups: _vm.groups,\n            subAdminsGroups: _vm.subAdminsGroups,\n            quotaOptions: _vm.quotaOptions,\n            languages: _vm.languages,\n            externalActions: _vm.externalActions\n          }\n        })\n      }),\n      _vm._v(\" \"),\n      _c(\n        \"infinite-loading\",\n        { ref: \"infiniteLoading\", on: { infinite: _vm.infiniteHandler } },\n        [\n          _c(\"div\", { attrs: { slot: \"spinner\" }, slot: \"spinner\" }, [\n            _c(\"div\", { staticClass: \"users-icon-loading icon-loading\" })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { attrs: { slot: \"no-more\" }, slot: \"no-more\" }, [\n            _c(\"div\", { staticClass: \"users-list-end\" })\n          ]),\n          _vm._v(\" \"),\n          _c(\"div\", { attrs: { slot: \"no-results\" }, slot: \"no-results\" }, [\n            _c(\"div\", { attrs: { id: \"emptycontent\" } }, [\n              _c(\"div\", { staticClass: \"icon-contacts-dark\" }),\n              _vm._v(\" \"),\n              _c(\"h2\", [_vm._v(_vm._s(_vm.t(\"settings\", \"No users in here\")))])\n            ])\n          ])\n        ]\n      )\n    ],\n    2\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return Object.keys(_vm.user).length === 1\n    ? _c(\"div\", { staticClass: \"row\", attrs: { \"data-id\": _vm.user.id } }, [\n        _c(\n          \"div\",\n          {\n            staticClass: \"avatar\",\n            class: {\n              \"icon-loading-small\": _vm.loading.delete || _vm.loading.disable\n            }\n          },\n          [\n            !_vm.loading.delete && !_vm.loading.disable\n              ? _c(\"img\", {\n                  attrs: {\n                    alt: \"\",\n                    width: \"32\",\n                    height: \"32\",\n                    src: _vm.generateAvatar(_vm.user.id, 32),\n                    srcset:\n                      _vm.generateAvatar(_vm.user.id, 64) +\n                      \" 2x, \" +\n                      _vm.generateAvatar(_vm.user.id, 128) +\n                      \" 4x\"\n                  }\n                })\n              : _vm._e()\n          ]\n        ),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"name\" }, [_vm._v(_vm._s(_vm.user.id))]),\n        _vm._v(\" \"),\n        _c(\"div\", { staticClass: \"obfuscated\" }, [\n          _vm._v(\n            _vm._s(\n              _vm.t(\n                \"settings\",\n                \"You do not have permissions to see the details of this user\"\n              )\n            )\n          )\n        ])\n      ])\n    : _c(\n        \"div\",\n        {\n          staticClass: \"row\",\n          class: { disabled: _vm.loading.delete || _vm.loading.disable },\n          attrs: { \"data-id\": _vm.user.id }\n        },\n        [\n          _c(\n            \"div\",\n            {\n              staticClass: \"avatar\",\n              class: {\n                \"icon-loading-small\": _vm.loading.delete || _vm.loading.disable\n              }\n            },\n            [\n              !_vm.loading.delete && !_vm.loading.disable\n                ? _c(\"img\", {\n                    attrs: {\n                      alt: \"\",\n                      width: \"32\",\n                      height: \"32\",\n                      src: _vm.generateAvatar(_vm.user.id, 32),\n                      srcset:\n                        _vm.generateAvatar(_vm.user.id, 64) +\n                        \" 2x, \" +\n                        _vm.generateAvatar(_vm.user.id, 128) +\n                        \" 4x\"\n                    }\n                  })\n                : _vm._e()\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"name\" }, [_vm._v(_vm._s(_vm.user.id))]),\n          _vm._v(\" \"),\n          _c(\n            \"form\",\n            {\n              staticClass: \"displayName\",\n              class: { \"icon-loading-small\": _vm.loading.displayName },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.updateDisplayName($event)\n                }\n              }\n            },\n            [\n              _vm.user.backendCapabilities.setDisplayName\n                ? [\n                    _vm.user.backendCapabilities.setDisplayName\n                      ? _c(\"input\", {\n                          ref: \"displayName\",\n                          attrs: {\n                            id: \"displayName\" + _vm.user.id + _vm.rand,\n                            type: \"text\",\n                            disabled:\n                              _vm.loading.displayName || _vm.loading.all,\n                            autocomplete: \"new-password\",\n                            autocorrect: \"off\",\n                            autocapitalize: \"off\",\n                            spellcheck: \"false\"\n                          },\n                          domProps: { value: _vm.user.displayname }\n                        })\n                      : _vm._e(),\n                    _vm._v(\" \"),\n                    _vm.user.backendCapabilities.setDisplayName\n                      ? _c(\"input\", {\n                          staticClass: \"icon-confirm\",\n                          attrs: { type: \"submit\", value: \"\" }\n                        })\n                      : _vm._e()\n                  ]\n                : _c(\n                    \"div\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip.auto\",\n                          value: _vm.t(\n                            \"settings\",\n                            \"The backend does not support changing the display name\"\n                          ),\n                          expression:\n                            \"t('settings', 'The backend does not support changing the display name')\",\n                          modifiers: { auto: true }\n                        }\n                      ],\n                      staticClass: \"name\"\n                    },\n                    [_vm._v(_vm._s(_vm.user.displayname))]\n                  )\n            ],\n            2\n          ),\n          _vm._v(\" \"),\n          _vm.settings.canChangePassword &&\n          _vm.user.backendCapabilities.setPassword\n            ? _c(\n                \"form\",\n                {\n                  staticClass: \"password\",\n                  class: { \"icon-loading-small\": _vm.loading.password },\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.updatePassword($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"input\", {\n                    ref: \"password\",\n                    attrs: {\n                      id: \"password\" + _vm.user.id + _vm.rand,\n                      type: \"password\",\n                      required: \"\",\n                      disabled: _vm.loading.password || _vm.loading.all,\n                      minlength: _vm.minPasswordLength,\n                      value: \"\",\n                      placeholder: _vm.t(\"settings\", \"New password\"),\n                      autocomplete: \"new-password\",\n                      autocorrect: \"off\",\n                      autocapitalize: \"off\",\n                      spellcheck: \"false\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\"input\", {\n                    staticClass: \"icon-confirm\",\n                    attrs: { type: \"submit\", value: \"\" }\n                  })\n                ]\n              )\n            : _c(\"div\"),\n          _vm._v(\" \"),\n          _c(\n            \"form\",\n            {\n              staticClass: \"mailAddress\",\n              class: { \"icon-loading-small\": _vm.loading.mailAddress },\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.updateEmail($event)\n                }\n              }\n            },\n            [\n              _c(\"input\", {\n                ref: \"mailAddress\",\n                attrs: {\n                  id: \"mailAddress\" + _vm.user.id + _vm.rand,\n                  type: \"email\",\n                  disabled: _vm.loading.mailAddress || _vm.loading.all,\n                  autocomplete: \"new-password\",\n                  autocorrect: \"off\",\n                  autocapitalize: \"off\",\n                  spellcheck: \"false\"\n                },\n                domProps: { value: _vm.user.email }\n              }),\n              _vm._v(\" \"),\n              _c(\"input\", {\n                staticClass: \"icon-confirm\",\n                attrs: { type: \"submit\", value: \"\" }\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              staticClass: \"groups\",\n              class: { \"icon-loading-small\": _vm.loading.groups }\n            },\n            [\n              _c(\n                \"multiselect\",\n                {\n                  staticClass: \"multiselect-vue\",\n                  attrs: {\n                    value: _vm.userGroups,\n                    options: _vm.availableGroups,\n                    disabled: _vm.loading.groups || _vm.loading.all,\n                    \"tag-placeholder\": \"create\",\n                    placeholder: _vm.t(\"settings\", \"Add user in group\"),\n                    label: \"name\",\n                    \"track-by\": \"id\",\n                    limit: 2,\n                    multiple: true,\n                    taggable: _vm.settings.isAdmin,\n                    closeOnSelect: false\n                  },\n                  on: {\n                    tag: _vm.createGroup,\n                    select: _vm.addUserGroup,\n                    remove: _vm.removeUserGroup\n                  }\n                },\n                [\n                  _c(\n                    \"span\",\n                    {\n                      directives: [\n                        {\n                          name: \"tooltip\",\n                          rawName: \"v-tooltip.auto\",\n                          value: _vm.formatGroupsTitle(_vm.userGroups),\n                          expression: \"formatGroupsTitle(userGroups)\",\n                          modifiers: { auto: true }\n                        }\n                      ],\n                      staticClass: \"multiselect__limit\",\n                      attrs: { slot: \"limit\" },\n                      slot: \"limit\"\n                    },\n                    [_vm._v(\"+\" + _vm._s(_vm.userGroups.length - 2))]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"span\",\n                    { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                    [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                  )\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.subAdminsGroups.length > 0 && _vm.settings.isAdmin\n            ? _c(\n                \"div\",\n                {\n                  staticClass: \"subadmins\",\n                  class: { \"icon-loading-small\": _vm.loading.subadmins }\n                },\n                [\n                  _c(\n                    \"multiselect\",\n                    {\n                      staticClass: \"multiselect-vue\",\n                      attrs: {\n                        value: _vm.userSubAdminsGroups,\n                        options: _vm.subAdminsGroups,\n                        disabled: _vm.loading.subadmins || _vm.loading.all,\n                        placeholder: _vm.t(\"settings\", \"Set user as admin for\"),\n                        label: \"name\",\n                        \"track-by\": \"id\",\n                        limit: 2,\n                        multiple: true,\n                        closeOnSelect: false\n                      },\n                      on: {\n                        select: _vm.addUserSubAdmin,\n                        remove: _vm.removeUserSubAdmin\n                      }\n                    },\n                    [\n                      _c(\n                        \"span\",\n                        {\n                          directives: [\n                            {\n                              name: \"tooltip\",\n                              rawName: \"v-tooltip.auto\",\n                              value: _vm.formatGroupsTitle(\n                                _vm.userSubAdminsGroups\n                              ),\n                              expression:\n                                \"formatGroupsTitle(userSubAdminsGroups)\",\n                              modifiers: { auto: true }\n                            }\n                          ],\n                          staticClass: \"multiselect__limit\",\n                          attrs: { slot: \"limit\" },\n                          slot: \"limit\"\n                        },\n                        [\n                          _vm._v(\n                            \"+\" + _vm._s(_vm.userSubAdminsGroups.length - 2)\n                          )\n                        ]\n                      ),\n                      _vm._v(\" \"),\n                      _c(\n                        \"span\",\n                        { attrs: { slot: \"noResult\" }, slot: \"noResult\" },\n                        [_vm._v(_vm._s(_vm.t(\"settings\", \"No results\")))]\n                      )\n                    ]\n                  )\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            {\n              directives: [\n                {\n                  name: \"tooltip\",\n                  rawName: \"v-tooltip.auto\",\n                  value: _vm.usedSpace,\n                  expression: \"usedSpace\",\n                  modifiers: { auto: true }\n                }\n              ],\n              staticClass: \"quota\",\n              class: { \"icon-loading-small\": _vm.loading.quota }\n            },\n            [\n              _c(\"multiselect\", {\n                staticClass: \"multiselect-vue\",\n                attrs: {\n                  value: _vm.userQuota,\n                  options: _vm.quotaOptions,\n                  disabled: _vm.loading.quota || _vm.loading.all,\n                  \"tag-placeholder\": \"create\",\n                  placeholder: _vm.t(\"settings\", \"Select user quota\"),\n                  label: \"label\",\n                  \"track-by\": \"id\",\n                  allowEmpty: false,\n                  taggable: true\n                },\n                on: { tag: _vm.validateQuota, input: _vm.setUserQuota }\n              }),\n              _vm._v(\" \"),\n              _c(\"progress\", {\n                staticClass: \"quota-user-progress\",\n                class: { warn: _vm.usedQuota > 80 },\n                attrs: { max: \"100\" },\n                domProps: { value: _vm.usedQuota }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _vm.showConfig.showLanguages\n            ? _c(\n                \"div\",\n                {\n                  staticClass: \"languages\",\n                  class: { \"icon-loading-small\": _vm.loading.languages }\n                },\n                [\n                  _c(\"multiselect\", {\n                    staticClass: \"multiselect-vue\",\n                    attrs: {\n                      value: _vm.userLanguage,\n                      options: _vm.languages,\n                      disabled: _vm.loading.languages || _vm.loading.all,\n                      placeholder: _vm.t(\"settings\", \"No language set\"),\n                      label: \"name\",\n                      \"track-by\": \"code\",\n                      allowEmpty: false,\n                      \"group-values\": \"languages\",\n                      \"group-label\": \"label\"\n                    },\n                    on: { input: _vm.setUserLanguage }\n                  })\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showStoragePath\n            ? _c(\"div\", { staticClass: \"storageLocation\" }, [\n                _vm._v(_vm._s(_vm.user.storageLocation))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showUserBackend\n            ? _c(\"div\", { staticClass: \"userBackend\" }, [\n                _vm._v(_vm._s(_vm.user.backend))\n              ])\n            : _vm._e(),\n          _vm._v(\" \"),\n          _vm.showConfig.showLastLogin\n            ? _c(\n                \"div\",\n                {\n                  directives: [\n                    {\n                      name: \"tooltip\",\n                      rawName: \"v-tooltip.auto\",\n                      value:\n                        _vm.user.lastLogin > 0\n                          ? _vm.OC.Util.formatDate(_vm.user.lastLogin)\n                          : \"\",\n                      expression:\n                        \"user.lastLogin>0 ? OC.Util.formatDate(user.lastLogin) : ''\",\n                      modifiers: { auto: true }\n                    }\n                  ],\n                  staticClass: \"lastLogin\"\n                },\n                [\n                  _vm._v(\n                    \"\\n\\t\\t\" +\n                      _vm._s(\n                        _vm.user.lastLogin > 0\n                          ? _vm.OC.Util.relativeModifiedDate(_vm.user.lastLogin)\n                          : _vm.t(\"settings\", \"Never\")\n                      ) +\n                      \"\\n\\t\"\n                  )\n                ]\n              )\n            : _vm._e(),\n          _vm._v(\" \"),\n          _c(\"div\", { staticClass: \"userActions\" }, [\n            _vm.OC.currentUser !== _vm.user.id &&\n            _vm.user.id !== \"admin\" &&\n            !_vm.loading.all\n              ? _c(\"div\", { staticClass: \"toggleUserActions\" }, [\n                  _c(\"div\", {\n                    directives: [\n                      {\n                        name: \"click-outside\",\n                        rawName: \"v-click-outside\",\n                        value: _vm.hideMenu,\n                        expression: \"hideMenu\"\n                      }\n                    ],\n                    staticClass: \"icon-more\",\n                    on: { click: _vm.toggleMenu }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    {\n                      staticClass: \"popovermenu\",\n                      class: { open: _vm.openedMenu }\n                    },\n                    [_c(\"popover-menu\", { attrs: { menu: _vm.userActions } })],\n                    1\n                  )\n                ])\n              : _vm._e(),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              {\n                staticClass: \"feedback\",\n                style: { opacity: _vm.feedbackMessage !== \"\" ? 1 : 0 }\n              },\n              [\n                _c(\"div\", { staticClass: \"icon-checkmark\" }),\n                _vm._v(\"\\n\\t\\t\\t\" + _vm._s(_vm.feedbackMessage) + \"\\n\\t\\t\")\n              ]\n            )\n          ])\n        ]\n      )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"ul\",\n    _vm._l(_vm.menu, function(item, key) {\n      return _c(\"popover-item\", { key: key, attrs: { item: item } })\n    }),\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"li\", [\n    _vm.item.href\n      ? _c(\n          \"a\",\n          {\n            attrs: {\n              href: _vm.item.href ? _vm.item.href : \"#\",\n              target: _vm.item.target ? _vm.item.target : \"\",\n              rel: \"noreferrer noopener\"\n            },\n            on: { click: _vm.item.action }\n          },\n          [\n            _c(\"span\", { class: _vm.item.icon }),\n            _vm._v(\" \"),\n            _vm.item.text\n              ? _c(\"span\", [_vm._v(_vm._s(_vm.item.text))])\n              : _vm.item.longtext\n              ? _c(\"p\", [_vm._v(_vm._s(_vm.item.longtext))])\n              : _vm._e()\n          ]\n        )\n      : _vm.item.action\n      ? _c(\"button\", { on: { click: _vm.item.action } }, [\n          _c(\"span\", { class: _vm.item.icon }),\n          _vm._v(\" \"),\n          _vm.item.text\n            ? _c(\"span\", [_vm._v(_vm._s(_vm.item.text))])\n            : _vm.item.longtext\n            ? _c(\"p\", [_vm._v(_vm._s(_vm.item.longtext))])\n            : _vm._e()\n        ])\n      : _c(\"span\", { staticClass: \"menuitem\" }, [\n          _c(\"span\", { class: _vm.item.icon }),\n          _vm._v(\" \"),\n          _vm.item.text\n            ? _c(\"span\", [_vm._v(_vm._s(_vm.item.text))])\n            : _vm.item.longtext\n            ? _c(\"p\", [_vm._v(_vm._s(_vm.item.longtext))])\n            : _vm._e()\n        ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","<!--\n  - @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @author John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @license GNU AGPL version 3 or any later version\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n\n<template>\n\t<li>\n\t\t<!-- If item.href is set, a link will be directly used -->\n\t\t<a @click=\"item.action\" v-if=\"item.href\" :href=\"(item.href) ? item.href : '#' \" :target=\"(item.target) ? item.target : '' \" rel=\"noreferrer noopener\">\n\t\t\t<span :class=\"item.icon\"></span>\n\t\t\t<span v-if=\"item.text\">{{item.text}}</span>\n\t\t\t<p v-else-if=\"item.longtext\">{{item.longtext}}</p>\n\t\t</a>\n\t\t<!-- If item.action is set instead, a button will be used -->\n\t\t<button @click=\"item.action\" v-else-if=\"item.action\">\n\t\t\t<span :class=\"item.icon\"></span>\n\t\t\t<span v-if=\"item.text\">{{item.text}}</span>\n\t\t\t<p v-else-if=\"item.longtext\">{{item.longtext}}</p>\n\t\t</button>\n\t\t<!-- If item.longtext is set AND the item does not have an action -->\n\t\t<span class=\"menuitem\" v-else>\n\t\t\t<span :class=\"item.icon\"></span>\n\t\t\t<span v-if=\"item.text\">{{item.text}}</span>\n\t\t\t<p v-else-if=\"item.longtext\">{{item.longtext}}</p>\n\t\t</span>\n\t</li>\n</template>\n\n<script>\nexport default {\n\tprops: ['item']\n};\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./popoverItem.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./popoverItem.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./popoverItem.vue?vue&type=template&id=4c6af9e6&\"\nimport script from \"./popoverItem.vue?vue&type=script&lang=js&\"\nexport * from \"./popoverItem.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"src/components/popoverMenu/popoverItem.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./popoverMenu.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./popoverMenu.vue?vue&type=script&lang=js&\"","<!--\n  - @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @author John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @license GNU AGPL version 3 or any later version\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n\n<template>\n\t<ul>\n\t\t<popover-item v-for=\"(item, key) in menu\" :item=\"item\" :key=\"key\" />\n\t</ul>\n</template>\n\n\n<script>\nimport popoverItem from './popoverMenu/popoverItem';\n\nexport default {\n\tname: 'popoverMenu',\n\tprops: ['menu'],\n\tcomponents: {\n\t\tpopoverItem\n\t}\n}\n</script>\n","import { render, staticRenderFns } from \"./popoverMenu.vue?vue&type=template&id=04ea21c4&\"\nimport script from \"./popoverMenu.vue?vue&type=script&lang=js&\"\nexport * from \"./popoverMenu.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"src/components/popoverMenu.vue\"\nexport default component.exports","<!--\n  - @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @author John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @license GNU AGPL version 3 or any later version\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n\n<template>\n\t<!-- Obfuscated user: Logged in user does not have permissions to see all of the data -->\n\t<div class=\"row\" v-if=\"Object.keys(user).length ===1\" :data-id=\"user.id\">\n\t\t<div class=\"avatar\" :class=\"{'icon-loading-small': loading.delete || loading.disable}\">\n\t\t\t<img alt=\"\" width=\"32\" height=\"32\" :src=\"generateAvatar(user.id, 32)\"\n\t\t\t\t :srcset=\"generateAvatar(user.id, 64)+' 2x, '+generateAvatar(user.id, 128)+' 4x'\"\n\t\t\t\t v-if=\"!loading.delete && !loading.disable\">\n\t\t</div>\n\t\t<div class=\"name\">{{user.id}}</div>\n\t\t<div class=\"obfuscated\">{{t('settings','You do not have permissions to see the details of this user')}}</div>\n\t</div>\n\n\t<!-- User full data -->\n\t<div class=\"row\" v-else :class=\"{'disabled': loading.delete || loading.disable}\" :data-id=\"user.id\">\n\t\t<div class=\"avatar\" :class=\"{'icon-loading-small': loading.delete || loading.disable}\">\n\t\t\t<img alt=\"\" width=\"32\" height=\"32\" :src=\"generateAvatar(user.id, 32)\"\n\t\t\t\t :srcset=\"generateAvatar(user.id, 64)+' 2x, '+generateAvatar(user.id, 128)+' 4x'\"\n\t\t\t\t v-if=\"!loading.delete && !loading.disable\">\n\t\t</div>\n\t\t<!-- dirty hack to ellipsis on two lines -->\n\t\t<div class=\"name\">{{user.id}}</div>\n\t\t<form class=\"displayName\" :class=\"{'icon-loading-small': loading.displayName}\" v-on:submit.prevent=\"updateDisplayName\">\n\t\t\t<template v-if=\"user.backendCapabilities.setDisplayName\">\n\t\t\t\t<input v-if=\"user.backendCapabilities.setDisplayName\"\n\t\t\t\t\t\t:id=\"'displayName'+user.id+rand\" type=\"text\"\n\t\t\t\t\t\t:disabled=\"loading.displayName||loading.all\"\n\t\t\t\t\t\t:value=\"user.displayname\" ref=\"displayName\"\n\t\t\t\t\t\tautocomplete=\"new-password\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" />\n\t\t\t\t<input v-if=\"user.backendCapabilities.setDisplayName\" type=\"submit\" class=\"icon-confirm\" value=\"\" />\n\t\t\t</template>\n\t\t\t<div v-else class=\"name\" v-tooltip.auto=\"t('settings', 'The backend does not support changing the display name')\">{{user.displayname}}</div>\n\t\t</form>\n\t\t<form class=\"password\" v-if=\"settings.canChangePassword && user.backendCapabilities.setPassword\" :class=\"{'icon-loading-small': loading.password}\"\n\t\t\t  v-on:submit.prevent=\"updatePassword\">\n\t\t\t<input :id=\"'password'+user.id+rand\" type=\"password\" required\n\t\t\t\t\t:disabled=\"loading.password||loading.all\" :minlength=\"minPasswordLength\"\n\t\t\t\t\tvalue=\"\" :placeholder=\"t('settings', 'New password')\" ref=\"password\"\n\t\t\t\t\tautocomplete=\"new-password\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" />\n\t\t\t<input type=\"submit\" class=\"icon-confirm\" value=\"\" />\n\t\t</form>\n\t\t<div v-else></div>\n\t\t<form class=\"mailAddress\" :class=\"{'icon-loading-small': loading.mailAddress}\" v-on:submit.prevent=\"updateEmail\">\n\t\t\t<input :id=\"'mailAddress'+user.id+rand\" type=\"email\"\n\t\t\t\t\t:disabled=\"loading.mailAddress||loading.all\"\n\t\t\t\t\t:value=\"user.email\" ref=\"mailAddress\"\n\t\t\t\t\tautocomplete=\"new-password\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" />\n\t\t\t<input type=\"submit\" class=\"icon-confirm\" value=\"\" />\n\t\t</form>\n\t\t<div class=\"groups\" :class=\"{'icon-loading-small': loading.groups}\">\n\t\t\t<multiselect :value=\"userGroups\" :options=\"availableGroups\" :disabled=\"loading.groups||loading.all\"\n\t\t\t\t\t\t tag-placeholder=\"create\" :placeholder=\"t('settings', 'Add user in group')\"\n\t\t\t\t\t\t label=\"name\" track-by=\"id\" class=\"multiselect-vue\" :limit=\"2\"\n\t\t\t\t\t\t :multiple=\"true\" :taggable=\"settings.isAdmin\" :closeOnSelect=\"false\"\n\t\t\t\t\t\t @tag=\"createGroup\" @select=\"addUserGroup\" @remove=\"removeUserGroup\">\n\t\t\t\t<span slot=\"limit\" class=\"multiselect__limit\" v-tooltip.auto=\"formatGroupsTitle(userGroups)\">+{{userGroups.length-2}}</span>\n\t\t\t\t<span slot=\"noResult\">{{t('settings', 'No results')}}</span>\n\t\t\t</multiselect>\n\t\t</div>\n\t\t<div class=\"subadmins\" v-if=\"subAdminsGroups.length>0 && settings.isAdmin\" :class=\"{'icon-loading-small': loading.subadmins}\">\n\t\t\t<multiselect :value=\"userSubAdminsGroups\" :options=\"subAdminsGroups\" :disabled=\"loading.subadmins||loading.all\"\n\t\t\t\t\t\t :placeholder=\"t('settings', 'Set user as admin for')\"\n\t\t\t\t\t\t label=\"name\" track-by=\"id\" class=\"multiselect-vue\" :limit=\"2\"\n\t\t\t\t\t\t :multiple=\"true\" :closeOnSelect=\"false\"\n\t\t\t\t\t\t @select=\"addUserSubAdmin\" @remove=\"removeUserSubAdmin\">\n\t\t\t\t<span slot=\"limit\" class=\"multiselect__limit\" v-tooltip.auto=\"formatGroupsTitle(userSubAdminsGroups)\">+{{userSubAdminsGroups.length-2}}</span>\n\t\t\t\t<span slot=\"noResult\">{{t('settings', 'No results')}}</span>\n\t\t\t</multiselect>\n\t\t</div>\n\t\t<div class=\"quota\" :class=\"{'icon-loading-small': loading.quota}\" v-tooltip.auto=\"usedSpace\">\n\t\t\t<multiselect :value=\"userQuota\" :options=\"quotaOptions\" :disabled=\"loading.quota||loading.all\"\n\t\t\t\t\t\t tag-placeholder=\"create\" :placeholder=\"t('settings', 'Select user quota')\"\n\t\t\t\t\t\t label=\"label\" track-by=\"id\" class=\"multiselect-vue\"\n\t\t\t\t\t\t :allowEmpty=\"false\" :taggable=\"true\"\n\t\t\t\t\t\t @tag=\"validateQuota\" @input=\"setUserQuota\">\n\t\t\t</multiselect>\n\t\t\t<progress class=\"quota-user-progress\" :class=\"{'warn':usedQuota>80}\" :value=\"usedQuota\" max=\"100\"></progress>\n\t\t</div>\n\t\t<div class=\"languages\" :class=\"{'icon-loading-small': loading.languages}\"\n\t\t\t v-if=\"showConfig.showLanguages\">\n\t\t\t<multiselect :value=\"userLanguage\" :options=\"languages\" :disabled=\"loading.languages||loading.all\"\n\t\t\t\t\t\t :placeholder=\"t('settings', 'No language set')\"\n\t\t\t\t\t\t label=\"name\" track-by=\"code\" class=\"multiselect-vue\"\n\t\t\t\t\t\t :allowEmpty=\"false\" group-values=\"languages\" group-label=\"label\"\n\t\t\t\t\t\t @input=\"setUserLanguage\">\n\t\t\t</multiselect>\n\t\t</div>\n\t\t<div class=\"storageLocation\" v-if=\"showConfig.showStoragePath\">{{user.storageLocation}}</div>\n\t\t<div class=\"userBackend\" v-if=\"showConfig.showUserBackend\">{{user.backend}}</div>\n\t\t<div class=\"lastLogin\" v-if=\"showConfig.showLastLogin\" v-tooltip.auto=\"user.lastLogin>0 ? OC.Util.formatDate(user.lastLogin) : ''\">\n\t\t\t{{user.lastLogin>0 ? OC.Util.relativeModifiedDate(user.lastLogin) : t('settings','Never')}}\n\t\t</div>\n\t\t<div class=\"userActions\">\n\t\t\t<div class=\"toggleUserActions\" v-if=\"OC.currentUser !== user.id && user.id !== 'admin' && !loading.all\">\n\t\t\t\t<div class=\"icon-more\" v-click-outside=\"hideMenu\" @click=\"toggleMenu\"></div>\n\t\t\t\t<div class=\"popovermenu\" :class=\"{ 'open': openedMenu }\">\n\t\t\t\t\t<popover-menu :menu=\"userActions\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"feedback\" :style=\"{opacity: feedbackMessage !== '' ? 1 : 0}\">\n\t\t\t\t<div class=\"icon-checkmark\"></div>\n\t\t\t\t{{feedbackMessage}}\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n</template>\n\n<script>\nimport popoverMenu from '../popoverMenu';\nimport ClickOutside from 'vue-click-outside';\nimport Multiselect from 'vue-multiselect';\nimport Vue from 'vue'\nimport VTooltip from 'v-tooltip'\n\nVue.use(VTooltip)\n\nexport default {\n\tname: 'userRow',\n\tprops: ['user', 'settings', 'groups', 'subAdminsGroups', 'quotaOptions', 'showConfig', 'languages', 'externalActions'],\n\tcomponents: {\n\t\tpopoverMenu,\n\t\tMultiselect\n\t},\n\tdirectives: {\n\t\tClickOutside\n\t},\n\tmounted() {\n\t\t// required if popup needs to stay opened after menu click\n\t\t// since we only have disable/delete actions, let's close it directly\n\t\t// this.popupItem = this.$el;\n\t},\n\tdata() {\n\t\treturn {\n\t\t\trand: parseInt(Math.random() * 1000),\n\t\t\topenedMenu: false,\n\t\t\tfeedbackMessage: '',\n\t\t\tloading: {\n\t\t\t\tall: false,\n\t\t\t\tdisplayName: false,\n\t\t\t\tpassword: false,\n\t\t\t\tmailAddress: false,\n\t\t\t\tgroups: false,\n\t\t\t\tsubadmins: false,\n\t\t\t\tquota: false,\n\t\t\t\tdelete: false,\n\t\t\t\tdisable: false,\n\t\t\t\tlanguages: false\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\t/* USER POPOVERMENU ACTIONS */\n\t\tuserActions() {\n\t\t\tlet actions = [{\n\t\t\t\ticon: 'icon-delete',\n\t\t\t\ttext: t('settings','Delete user'),\n\t\t\t\taction: this.deleteUser\n\t\t\t},{\n\t\t\t\ticon: this.user.enabled ? 'icon-close' : 'icon-add',\n\t\t\t\ttext: this.user.enabled ? t('settings','Disable user') : t('settings','Enable user'),\n\t\t\t\taction: this.enableDisableUser\n\t\t\t}];\n\t\t\tif (this.user.email !== null && this.user.email !== '') {\n\t\t\t\tactions.push({\n\t\t\t\t\ticon: 'icon-mail',\n\t\t\t\t\ttext: t('settings','Resend welcome email'),\n\t\t\t\t\taction: this.sendWelcomeMail\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn actions.concat(this.externalActions);\n\t\t},\n\n\t\t/* GROUPS MANAGEMENT */\n\t\tuserGroups() {\n\t\t\tlet userGroups = this.groups.filter(group => this.user.groups.includes(group.id));\n\t\t\treturn userGroups;\n\t\t},\n\t\tuserSubAdminsGroups() {\n\t\t\tlet userSubAdminsGroups = this.subAdminsGroups.filter(group => this.user.subadmin.includes(group.id));\n\t\t\treturn userSubAdminsGroups;\n\t\t},\n\t\tavailableGroups() {\n\t\t\treturn this.groups.map((group) => {\n\t\t\t\t// clone object because we don't want\n\t\t\t\t// to edit the original groups\n\t\t\t\tlet groupClone = Object.assign({}, group);\n\n\t\t\t\t// two settings here:\n\t\t\t\t// 1. user NOT in group but no permission to add\n\t\t\t\t// 2. user is in group but no permission to remove\n\t\t\t\tgroupClone.$isDisabled =\n\t\t\t\t\t(group.canAdd === false &&\n\t\t\t\t\t\t!this.user.groups.includes(group.id)) ||\n\t\t\t\t\t(group.canRemove === false &&\n\t\t\t\t\t\tthis.user.groups.includes(group.id));\n\t\t\t\treturn groupClone;\n\t\t\t});\n\t\t},\n\n\t\t/* QUOTA MANAGEMENT */\n\t\tusedSpace() {\n\t\t\tif (this.user.quota.used) {\n\t\t\t\treturn t('settings', '{size} used', {size: OC.Util.humanFileSize(this.user.quota.used)});\n\t\t\t}\n\t\t\treturn t('settings', '{size} used', {size: OC.Util.humanFileSize(0)});\n\t\t},\n\t\tusedQuota() {\n\t\t\tlet quota = this.user.quota.quota;\n\t\t\tif (quota > 0) {\n\t\t\t\tquota = Math.min(100, Math.round(this.user.quota.used / quota * 100));\n\t\t\t} else {\n\t\t\t\tvar usedInGB = this.user.quota.used / (10 * Math.pow(2, 30));\n\t\t\t\t//asymptotic curve approaching 50% at 10GB to visualize used stace with infinite quota\n\t\t\t\tquota = 95 * (1 - (1 / (usedInGB + 1)));\n\t\t\t}\n\t\t\treturn isNaN(quota) ? 0 : quota;\n\t\t},\n\t\t// Mapping saved values to objects\n\t\tuserQuota() {\n\t\t\tif (this.user.quota.quota >= 0) {\n\t\t\t\t// if value is valid, let's map the quotaOptions or return custom quota\n\t\t\t\tlet humanQuota = OC.Util.humanFileSize(this.user.quota.quota);\n\t\t\t\tlet userQuota = this.quotaOptions.find(quota => quota.id === humanQuota);\n\t\t\t\treturn userQuota ? userQuota : {id:humanQuota, label:humanQuota};\n\t\t\t} else if (this.user.quota.quota === 'default') {\n\t\t\t\t// default quota is replaced by the proper value on load\n\t\t\t\treturn this.quotaOptions[0];\n\t\t\t}\n\t\t\treturn this.quotaOptions[1]; // unlimited\n\t\t},\n\n\t\t/* PASSWORD POLICY? */\n\t\tminPasswordLength() {\n\t\t\treturn this.$store.getters.getPasswordPolicyMinLength;\n\t\t},\n\n\t\t/* LANGUAGE */\n\t\tuserLanguage() {\n\t\t\tlet availableLanguages = this.languages[0].languages.concat(this.languages[1].languages);\n\t\t\tlet userLang = availableLanguages.find(lang => lang.code === this.user.language);\n\t\t\tif (typeof userLang !== 'object' && this.user.language !== '') {\n\t\t\t\treturn {\n\t\t\t\t\tcode: this.user.language,\n\t\t\t\t\tname: this.user.language\n\t\t\t\t}\n\t\t\t} else if(this.user.language === '') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn userLang;\n\t\t}\n\t},\n\tmethods: {\n\t\t/* MENU HANDLING */\n\t\ttoggleMenu() {\n\t\t\tthis.openedMenu = !this.openedMenu;\n\t\t},\n\t\thideMenu() {\n\t\t\tthis.openedMenu = false;\n\t\t},\n\n\t\t/**\n\t\t * Generate avatar url\n\t\t * \n\t\t * @param {string} user The user name\n\t\t * @param {int} size Size integer, default 32\n\t\t * @returns {string}\n\t\t */\n\t\tgenerateAvatar(user, size=32) {\n\t\t\treturn OC.generateUrl(\n\t\t\t\t'/avatar/{user}/{size}?v={version}',\n\t\t\t\t{\n\t\t\t\t\tuser: user,\n\t\t\t\t\tsize: size,\n\t\t\t\t\tversion: oc_userconfig.avatar.version\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Format array of groups objects to a string for the popup\n\t\t * \n\t\t * @param {array} groups The groups\n\t\t * @returns {string}\n\t\t */\n\t\tformatGroupsTitle(groups) {\n\t\t\tlet names = groups.map(group => group.name);\n\t\t\treturn names.slice(2,).join(', ');\n\t\t},\n\n\t\tdeleteUser() {\n\t\t\tthis.loading.delete = true;\n\t\t\tthis.loading.all = true;\n\t\t\tlet userid = this.user.id;\n\t\t\treturn this.$store.dispatch('deleteUser', userid)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loading.delete = false\n\t\t\t\t\tthis.loading.all = false\n\t\t\t\t});\n\t\t},\n\n\t\tenableDisableUser() {\n\t\t\tthis.loading.delete = true;\n\t\t\tthis.loading.all = true;\n\t\t\tlet userid = this.user.id;\n\t\t\tlet enabled = !this.user.enabled;\n\t\t\treturn this.$store.dispatch('enableDisableUser', {userid, enabled})\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loading.delete = false\n\t\t\t\t\tthis.loading.all = false\n\t\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Set user displayName\n\t\t * \n\t\t * @param {string} displayName The display name\n\t\t * @returns {Promise}\n\t\t */\n\t\tupdateDisplayName() {\n\t\t\tlet displayName = this.$refs.displayName.value;\n\t\t\tthis.loading.displayName = true;\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id, \n\t\t\t\tkey: 'displayname',\n\t\t\t\tvalue: displayName\n\t\t\t}).then(() => {\n\t\t\t\tthis.loading.displayName = false;\n\t\t\t\tthis.$refs.displayName.value = displayName;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Set user password\n\t\t * \n\t\t * @param {string} password The email adress\n\t\t * @returns {Promise}\n\t\t */\n\t\tupdatePassword() {\n\t\t\tlet password = this.$refs.password.value;\n\t\t\tthis.loading.password = true;\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id,\n\t\t\t\tkey: 'password',\n\t\t\t\tvalue: password\n\t\t\t}).then(() => {\n\t\t\t\tthis.loading.password = false;\n\t\t\t\tthis.$refs.password.value = ''; // empty & show placeholder \n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Set user mailAddress\n\t\t * \n\t\t * @param {string} mailAddress The email adress\n\t\t * @returns {Promise}\n\t\t */\n\t\tupdateEmail() {\n\t\t\tlet mailAddress = this.$refs.mailAddress.value;\n\t\t\tthis.loading.mailAddress = true;\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id,\n\t\t\t\tkey: 'email',\n\t\t\t\tvalue: mailAddress\n\t\t\t}).then(() => {\n\t\t\t\tthis.loading.mailAddress = false;\n\t\t\t\tthis.$refs.mailAddress.value = mailAddress;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Create a new group and add user to it\n\t\t * \n\t\t * @param {string} groups Group id\n\t\t * @returns {Promise}\n\t\t */\n\t\tcreateGroup(gid) {\n\t\t\tthis.loading = {groups:true, subadmins:true}\n\t\t\tthis.$store.dispatch('addGroup', gid)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loading = {groups:false, subadmins:false};\n\t\t\t\t\tlet userid = this.user.id;\n\t\t\t\t\tthis.$store.dispatch('addUserGroup', {userid, gid});\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loading = {groups:false, subadmins:false};\n\t\t\t\t});\n\t\t\treturn this.$store.getters.getGroups[this.groups.length];\n\t\t},\n\n\t\t/**\n\t\t * Add user to group\n\t\t * \n\t\t * @param {object} group Group object\n\t\t * @returns {Promise}\n\t\t */\n\t\taddUserGroup(group) {\n\t\t\tif (group.canAdd === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.loading.groups = true;\n\t\t\tlet userid = this.user.id;\n\t\t\tlet gid = group.id;\n\t\t\treturn this.$store.dispatch('addUserGroup', {userid, gid})\n\t\t\t\t.then(() => this.loading.groups = false);\n\t\t},\n\n\t\t/**\n\t\t * Remove user from group\n\t\t * \n\t\t * @param {object} group Group object\n\t\t * @returns {Promise}\n\t\t */\n\t\tremoveUserGroup(group) {\n\t\t\tif (group.canRemove === false) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis.loading.groups = true;\n\t\t\tlet userid = this.user.id;\n\t\t\tlet gid = group.id;\n\t\t\treturn this.$store.dispatch('removeUserGroup', {userid, gid})\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.loading.groups = false\n\t\t\t\t\t// remove user from current list if current list is the removed group\n\t\t\t\t\tif (this.$route.params.selectedGroup === gid) {\n\t\t\t\t\t\tthis.$store.commit('deleteUser', userid);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loading.groups = false\n\t\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Add user to group\n\t\t * \n\t\t * @param {object} group Group object\n\t\t * @returns {Promise}\n\t\t */\n\t\taddUserSubAdmin(group) {\n\t\t\tthis.loading.subadmins = true;\n\t\t\tlet userid = this.user.id;\n\t\t\tlet gid = group.id;\n\t\t\treturn this.$store.dispatch('addUserSubAdmin', {userid, gid})\n\t\t\t\t.then(() => this.loading.subadmins = false);\n\t\t},\n\n\t\t/**\n\t\t * Remove user from group\n\t\t * \n\t\t * @param {object} group Group object\n\t\t * @returns {Promise}\n\t\t */\n\t\tremoveUserSubAdmin(group) {\n\t\t\tthis.loading.subadmins = true;\n\t\t\tlet userid = this.user.id;\n\t\t\tlet gid = group.id;\n\t\t\treturn this.$store.dispatch('removeUserSubAdmin', {userid, gid})\n\t\t\t\t.then(() => this.loading.subadmins = false);\n\t\t},\n\n\t\t/**\n\t\t * Dispatch quota set request\n\t\t * \n\t\t * @param {string|Object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t * @returns {string}\n\t\t */\n\t\tsetUserQuota(quota = 'none') {\n\t\t\tthis.loading.quota = true;\n\t\t\t// ensure we only send the preset id\n\t\t\tquota = quota.id ? quota.id : quota;\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id, \n\t\t\t\tkey: 'quota',\n\t\t\t\tvalue: quota\n\t\t\t}).then(() => this.loading.quota = false);\n\t\t\treturn quota;\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t * \n\t\t * @param {string} quota Quota in readable format '5 GB'\n\t\t * @returns {Promise|boolean}\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tlet validQuota = OC.Util.computerFileSize(quota);\n\t\t\tif (validQuota !== null && validQuota >= 0) {\n\t\t\t\t// unify format output\n\t\t\t\treturn this.setUserQuota(OC.Util.humanFileSize(OC.Util.computerFileSize(quota)));\n\t\t\t}\n\t\t\t// if no valid do not change\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Dispatch language set request\n\t\t * \n\t\t * @param {Object} lang language object {code:'en', name:'English'}\n\t\t * @returns {Object}\n\t\t */\n\t\tsetUserLanguage(lang) {\n\t\t\tthis.loading.languages = true;\n\t\t\t// ensure we only send the preset id\n\t\t\tthis.$store.dispatch('setUserData', {\n\t\t\t\tuserid: this.user.id, \n\t\t\t\tkey: 'language',\n\t\t\t\tvalue: lang.code\n\t\t\t}).then(() => this.loading.languages = false);\n\t\t\treturn lang;\n\t\t},\n\n\t\t/**\n\t\t * Dispatch new welcome mail request\n\t\t */\n\t\tsendWelcomeMail() {\n\t\t\tthis.loading.all = true;\n\t\t\tthis.$store.dispatch('sendWelcomeMail', this.user.id)\n\t\t\t\t.then(success => {\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\t// Show feedback to indicate the success\n\t\t\t\t\t\tthis.feedbackMessage = t('setting', 'Welcome mail sent!');\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tthis.feedbackMessage = '';\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t}\n\t\t\t\t\tthis.loading.all = false;\n\t\t\t\t});\n\t\t}\n\n\t}\n}\n</script>\n","import mod from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userRow.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userRow.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./userRow.vue?vue&type=template&id=d19586ce&\"\nimport script from \"./userRow.vue?vue&type=script&lang=js&\"\nexport * from \"./userRow.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"src/components/userList/userRow.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userList.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./userList.vue?vue&type=script&lang=js&\"","<!--\n  - @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @author John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @license GNU AGPL version 3 or any later version\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n  \n<template>\n\t<div id=\"app-content\" class=\"user-list-grid\" v-on:scroll.passive=\"onScroll\">\n\t\t<div class=\"row\" id=\"grid-header\" :class=\"{'sticky': scrolled && !showConfig.showNewUserForm}\">\n\t\t\t<div id=\"headerAvatar\" class=\"avatar\"></div>\n\t\t\t<div id=\"headerName\" class=\"name\">{{ t('settings', 'Username') }}</div>\n\t\t\t<div id=\"headerDisplayName\" class=\"displayName\">{{ t('settings',  'Display name') }}</div>\n\t\t\t<div id=\"headerPassword\" class=\"password\">{{ t('settings',  'Password') }}</div>\n\t\t\t<div id=\"headerAddress\" class=\"mailAddress\">{{ t('settings',  'Email') }}</div>\n\t\t\t<div id=\"headerGroups\" class=\"groups\">{{ t('settings',  'Groups') }}</div>\n\t\t\t<div id=\"headerSubAdmins\" class=\"subadmins\"\n\t\t\t\t v-if=\"subAdminsGroups.length>0 && settings.isAdmin\">{{ t('settings', 'Group admin for') }}</div>\n\t\t\t<div id=\"headerQuota\" class=\"quota\">{{ t('settings', 'Quota') }}</div>\n\t\t\t<div id=\"headerLanguages\" class=\"languages\"\n\t\t\t\t v-if=\"showConfig.showLanguages\">{{ t('settings', 'Language') }}</div>\n\t\t\t<div class=\"headerStorageLocation storageLocation\"\n\t\t\t\t v-if=\"showConfig.showStoragePath\">{{ t('settings', 'Storage location') }}</div>\n\t\t\t<div class=\"headerUserBackend userBackend\"\n\t\t\t\t v-if=\"showConfig.showUserBackend\">{{ t('settings', 'User backend') }}</div>\n\t\t\t<div class=\"headerLastLogin lastLogin\" \n\t\t\t\t v-if=\"showConfig.showLastLogin\">{{ t('settings', 'Last login') }}</div>\n\t\t\t<div class=\"userActions\"></div>\n\t\t</div>\n\n\t\t<form class=\"row\" id=\"new-user\" v-show=\"showConfig.showNewUserForm\"\n\t\t\t  v-on:submit.prevent=\"createUser\" :disabled=\"loading.all\"\n\t\t\t  :class=\"{'sticky': scrolled && showConfig.showNewUserForm}\">\n\t\t\t<div :class=\"loading.all?'icon-loading-small':'icon-add'\"></div>\n\t\t\t<div class=\"name\">\n\t\t\t\t<input id=\"newusername\" type=\"text\" required v-model=\"newUser.id\"\n\t\t\t\t\t   :placeholder=\"t('settings', 'Username')\" name=\"username\"\n\t\t\t\t\t   autocomplete=\"off\" autocapitalize=\"none\" autocorrect=\"off\"\n\t\t\t\t\t   ref=\"newusername\" pattern=\"[a-zA-Z0-9 _\\.@\\-']+\">\n\t\t\t</div>\n\t\t\t<div class=\"displayName\">\n\t\t\t\t<input id=\"newdisplayname\" type=\"text\" v-model=\"newUser.displayName\"\n\t\t\t\t\t   :placeholder=\"t('settings', 'Display name')\" name=\"displayname\"\n\t\t\t\t\t   autocomplete=\"off\" autocapitalize=\"none\" autocorrect=\"off\">\n\t\t\t</div>\n\t\t\t<div class=\"password\">\n\t\t\t\t<input id=\"newuserpassword\" type=\"password\" v-model=\"newUser.password\"\n\t\t\t\t\t   :required=\"newUser.mailAddress===''\" ref=\"newuserpassword\"\n\t\t\t\t\t   :placeholder=\"t('settings', 'Password')\" name=\"password\"\n\t\t\t\t\t   autocomplete=\"new-password\" autocapitalize=\"none\" autocorrect=\"off\"\n\t\t\t\t\t   :minlength=\"minPasswordLength\">\n\t\t\t</div>\n\t\t\t<div class=\"mailAddress\">\n\t\t\t\t<input id=\"newemail\" type=\"email\" v-model=\"newUser.mailAddress\"\n\t\t\t\t\t   :required=\"newUser.password===''\"\n\t\t\t\t\t   :placeholder=\"t('settings', 'Email')\" name=\"email\"\n\t\t\t\t\t   autocomplete=\"off\" autocapitalize=\"none\" autocorrect=\"off\">\n\t\t\t</div>\n\t\t\t<div class=\"groups\">\n\t\t\t\t<!-- hidden input trick for vanilla html5 form validation -->\n\t\t\t\t<input type=\"text\" :value=\"newUser.groups\" v-if=\"!settings.isAdmin\"\n\t\t\t\t\t   tabindex=\"-1\" id=\"newgroups\" :required=\"!settings.isAdmin\"\n\t\t\t\t\t   :class=\"{'icon-loading-small': loading.groups}\"/>\n\t\t\t\t<multiselect v-model=\"newUser.groups\" :options=\"canAddGroups\" :disabled=\"loading.groups||loading.all\"\n\t\t\t\t\t\t tag-placeholder=\"create\" :placeholder=\"t('settings', 'Add user in group')\"\n\t\t\t\t\t\t label=\"name\" track-by=\"id\" class=\"multiselect-vue\"\n\t\t\t\t\t\t :multiple=\"true\" :taggable=\"true\" :close-on-select=\"false\"\n\t\t\t\t\t\t @tag=\"createGroup\">\n\t\t\t\t\t\t\t <!-- If user is not admin, he is a subadmin.\n\t\t\t\t\t\t\t \t  Subadmins can't create users outside their groups\n\t\t\t\t\t\t\t\t  Therefore, empty select is forbidden -->\n\t\t\t\t\t<span slot=\"noResult\">{{t('settings', 'No results')}}</span>\n\t\t\t\t</multiselect>\n\t\t\t</div>\n\t\t\t<div class=\"subadmins\" v-if=\"subAdminsGroups.length>0 && settings.isAdmin\">\n\t\t\t\t<multiselect :options=\"subAdminsGroups\" v-model=\"newUser.subAdminsGroups\"\n\t\t\t\t\t\t\t :placeholder=\"t('settings', 'Set user as admin for')\"\n\t\t\t\t\t\t\t label=\"name\" track-by=\"id\" class=\"multiselect-vue\"\n\t\t\t\t\t\t\t :multiple=\"true\" :close-on-select=\"false\">\n\t\t\t\t\t<span slot=\"noResult\">{{t('settings', 'No results')}}</span>\n\t\t\t</multiselect>\n\t\t\t</div>\n\t\t\t<div class=\"quota\">\n\t\t\t\t<multiselect :options=\"quotaOptions\" v-model=\"newUser.quota\"\n\t\t\t\t\t\t\t :placeholder=\"t('settings', 'Select user quota')\"\n\t\t\t\t\t\t\t label=\"label\" track-by=\"id\" class=\"multiselect-vue\"\n\t\t\t\t\t\t\t :allowEmpty=\"false\" :taggable=\"true\"\n\t\t\t\t\t\t \t @tag=\"validateQuota\" >\n\t\t\t\t</multiselect>\n\t\t\t</div>\n\t\t\t<div class=\"languages\" v-if=\"showConfig.showLanguages\">\n\t\t\t\t<multiselect :options=\"languages\" v-model=\"newUser.language\"\n\t\t\t\t\t\t\t :placeholder=\"t('settings', 'Default language')\"\n\t\t\t\t\t\t\t label=\"name\" track-by=\"code\" class=\"multiselect-vue\"\n\t\t\t\t\t\t\t :allowEmpty=\"false\" group-values=\"languages\" group-label=\"label\">\n\t\t\t\t</multiselect>\n\t\t\t</div>\n\t\t\t<div class=\"storageLocation\" v-if=\"showConfig.showStoragePath\"></div>\n\t\t\t<div class=\"userBackend\" v-if=\"showConfig.showUserBackend\"></div>\n\t\t\t<div class=\"lastLogin\" v-if=\"showConfig.showLastLogin\"></div>\n\t\t\t<div class=\"userActions\">\n\t\t\t\t<input type=\"submit\" id=\"newsubmit\" class=\"button primary icon-checkmark-white has-tooltip\"\n\t\t\t\t\t   value=\"\" :title=\"t('settings', 'Add a new user')\">\n\t\t\t</div>\n\t\t</form>\n\n\t\t<user-row v-for=\"(user, key) in filteredUsers\" :user=\"user\" :key=\"key\" :settings=\"settings\" :showConfig=\"showConfig\"\n\t\t\t\t  :groups=\"groups\" :subAdminsGroups=\"subAdminsGroups\" :quotaOptions=\"quotaOptions\" :languages=\"languages\"\n\t\t\t\t  :externalActions=\"externalActions\" />\n\t\t<infinite-loading @infinite=\"infiniteHandler\" ref=\"infiniteLoading\">\n\t\t\t<div slot=\"spinner\"><div class=\"users-icon-loading icon-loading\"></div></div>\n\t\t\t<div slot=\"no-more\"><div class=\"users-list-end\"></div></div>\n\t\t\t<div slot=\"no-results\">\n\t\t\t\t<div id=\"emptycontent\">\n\t\t\t\t\t<div class=\"icon-contacts-dark\"></div>\n\t\t\t\t\t<h2>{{t('settings', 'No users in here')}}</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</infinite-loading>\n\t</div>\n</template>\n\n<script>\nimport userRow from './userList/userRow';\nimport Multiselect from 'vue-multiselect';\nimport InfiniteLoading from 'vue-infinite-loading';\nimport Vue from 'vue';\n\nexport default {\n\tname: 'userList',\n\tprops: ['users', 'showConfig', 'selectedGroup', 'externalActions'],\n\tcomponents: {\n\t\tuserRow,\n\t\tMultiselect,\n\t\tInfiniteLoading\n\t},\n\tdata() {\n\t\tlet unlimitedQuota = {id:'none', label:t('settings', 'Unlimited')},\n\t\t\tdefaultQuota = {id:'default', label:t('settings', 'Default quota')};\n\t\treturn {\n\t\t\tunlimitedQuota: unlimitedQuota,\n\t\t\tdefaultQuota: defaultQuota,\n\t\t\tloading: {\n\t\t\t\tall: false,\n\t\t\t\tgroups: false\n\t\t\t},\n\t\t\tscrolled: false,\n\t\t\tsearchQuery: '',\n\t\t\tnewUser: {\n\t\t\t\tid:'',\n\t\t\t\tdisplayName:'',\n\t\t\t\tpassword:'',\n\t\t\t\tmailAddress:'',\n\t\t\t\tgroups: [],\n\t\t\t\tsubAdminsGroups: [],\n\t\t\t\tquota: defaultQuota,\n\t\t\t\tlanguage: {code: 'en', name: t('settings', 'Default language')}\n\t\t\t}\n\t\t};\n\t},\n\tmounted() {\n\t\tif (!this.settings.canChangePassword) {\n\t\t\tOC.Notification.showTemporary(t('settings', 'Password change is disabled because the master key is disabled'));\n\t\t}\n\n\t\t/** \n\t\t * Init default language from server data. The use of this.settings\n\t\t * requires a computed variable, which break the v-model binding of the form,\n\t\t * this is a much easier solution than getter and setter on a computed var\n\t\t */\n\t\tVue.set(this.newUser.language, 'code', this.settings.defaultLanguage);\n\n\t\t/**\n\t\t * In case the user directly loaded the user list within a group\n\t\t * the watch won't be triggered. We need to initialize it.\n\t\t */\n\t\tthis.setNewUserDefaultGroup(this.$route.params.selectedGroup);\n\n\t\t/** \n\t\t * Register search\n\t\t */\n\t\tthis.userSearch = new OCA.Search(this.search, this.resetSearch);\n\t},\n\tcomputed: {\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData;\n\t\t},\n\t\tfilteredUsers() {\n\t\t\tif (this.selectedGroup === 'disabled') {\n\t\t\t\tlet disabledUsers = this.users.filter(user => user.enabled === false);\n\t\t\t\tif (disabledUsers.length===0 && this.$refs.infiniteLoading && this.$refs.infiniteLoading.isComplete) {\n\t\t\t\t\t// disabled group is empty, redirection to all users\n\t\t\t\t\tthis.$router.push({name: 'users'});\n\t\t\t\t\tthis.$refs.infiniteLoading.$emit('$InfiniteLoading:reset');\n\t\t\t\t}\n\t\t\t\treturn disabledUsers;\n\t\t\t}\n\t\t\tif (!this.settings.isAdmin) {\n\t\t\t\t// we don't want subadmins to edit themselves\n\t\t\t\treturn this.users.filter(user => user.enabled !== false && user.id !== oc_current_user);\n\t\t\t}\n\t\t\treturn this.users.filter(user => user.enabled !== false);\n\t\t},\n\t\tgroups() {\n\t\t\t// data provided php side + remove the disabled group\n\t\t\treturn this.$store.getters.getGroups\n\t\t\t\t.filter(group => group.id !== 'disabled')\n\t\t\t\t.sort((a, b) => a.name.localeCompare(b.name));\n\t\t},\n\t\tcanAddGroups() {\n\t\t\t// disabled if no permission to add new users to group\n\t\t\treturn this.groups.map(group => {\n\t\t\t\t// clone object because we don't want\n\t\t\t\t// to edit the original groups\n\t\t\t\tgroup = Object.assign({}, group);\n\t\t\t\tgroup.$isDisabled = group.canAdd === false;\n\t\t\t\treturn group;\n\t\t\t});\n\t\t},\n\t\tsubAdminsGroups() {\n\t\t\t// data provided php side\n\t\t\treturn this.$store.getters.getSubadminGroups;\n\t\t},\n\t\tquotaOptions() {\n\t\t\t// convert the preset array into objects\n\t\t\tlet quotaPreset = this.settings.quotaPreset.reduce((acc, cur) => acc.concat({id: cur, label: cur}), []);\n\t\t\t// add default presets\n\t\t\tquotaPreset.unshift(this.unlimitedQuota);\n\t\t\tquotaPreset.unshift(this.defaultQuota);\n\t\t\treturn quotaPreset;\n\t\t},\n\t\tminPasswordLength() {\n\t\t\treturn this.$store.getters.getPasswordPolicyMinLength;\n\t\t},\n\t\tusersOffset() {\n\t\t\treturn this.$store.getters.getUsersOffset;\n\t\t},\n\t\tusersLimit() {\n\t\t\treturn this.$store.getters.getUsersLimit;\n\t\t},\n\n\t\t/* LANGUAGES */\n\t\tlanguages() {\n\t\t\treturn Array(\n\t\t\t\t{\n\t\t\t\t\tlabel: t('settings', 'Common languages'),\n\t\t\t\t\tlanguages: this.settings.languages.commonlanguages\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: t('settings', 'All languages'),\n\t\t\t\t\tlanguages: this.settings.languages.languages\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t},\n\twatch: {\n\t\t// watch url change and group select\n\t\tselectedGroup: function (val, old) {\n\t\t\tthis.$store.commit('resetUsers');\n\t\t\tthis.$refs.infiniteLoading.$emit('$InfiniteLoading:reset');\n\t\t\tthis.setNewUserDefaultGroup(val);\n\t\t}\n\t},\n\tmethods: {\n\t\tonScroll(event) {\n\t\t\tthis.scrolled = event.target.scrollTo > 0;\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t * \n\t\t * @param {string} quota Quota in readable format '5 GB'\n\t\t * @returns {Object}\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tlet validQuota = OC.Util.computerFileSize(quota);\n\t\t\tif (validQuota !== null && validQuota >= 0) {\n\t\t\t\t// unify format output\n\t\t\t\tquota = OC.Util.humanFileSize(OC.Util.computerFileSize(quota));\n\t\t\t\treturn this.newUser.quota = {id: quota, label: quota};\n\t\t\t}\n\t\t\t// Default is unlimited\n\t\t\treturn this.newUser.quota = this.quotaOptions[0];\n\t\t},\n\n\t\tinfiniteHandler($state) {\n\t\t\tthis.$store.dispatch('getUsers', {\n\t\t\t\toffset: this.usersOffset,\n\t\t\t\tlimit: this.usersLimit,\n\t\t\t\tgroup: this.selectedGroup !== 'disabled' ? this.selectedGroup : '',\n\t\t\t\tsearch: this.searchQuery\n\t\t\t})\n\t\t\t.then((response) => { response ? $state.loaded() : $state.complete() });\n\t\t},\n\n\t\t/* SEARCH */\n\t\tsearch(query) {\n\t\t\tthis.searchQuery = query;\n\t\t\tthis.$store.commit('resetUsers');\n\t\t\tthis.$refs.infiniteLoading.$emit('$InfiniteLoading:reset');\n\t\t},\n\t\tresetSearch() {\n\t\t\tthis.search('');\n\t\t},\n\n\t\tresetForm() {\n\t\t\t// revert form to original state\n\t\t\tObject.assign(this.newUser, this.$options.data.call(this).newUser);\n\t\t\tthis.loading.all = false;\n\t\t},\n\t\tcreateUser() {\n\t\t\tthis.loading.all = true;\n\t\t\tthis.$store.dispatch('addUser', {\n\t\t\t\tuserid: this.newUser.id,\n\t\t\t\tpassword: this.newUser.password,\n\t\t\t\tdisplayName: this.newUser.displayName,\n\t\t\t\temail: this.newUser.mailAddress,\n\t\t\t\tgroups: this.newUser.groups.map(group => group.id),\n\t\t\t\tsubadmin: this.newUser.subAdminsGroups.map(group => group.id),\n\t\t\t\tquota: this.newUser.quota.id,\n\t\t\t\tlanguage: this.newUser.language.code,\n\t\t\t})\n\t\t\t.then(() => this.resetForm())\n\t\t\t.catch((error) => {\n\t\t\t\tthis.loading.all = false;\n\t\t\t\tif (error.response && error.response.data && error.response.data.ocs && error.response.data.ocs.meta) {\n\t\t\t\t\tconst statuscode = error.response.data.ocs.meta.statuscode\n\t\t\t\t\tif (statuscode === 102) {\n\t\t\t\t\t\t// wrong username\n\t\t\t\t\t\tthis.$refs.newusername.focus();\t\n\t\t\t\t\t} else if (statuscode === 107) {\n\t\t\t\t\t\t// wrong password\n\t\t\t\t\t\tthis.$refs.newuserpassword.focus();\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t},\n\t\tsetNewUserDefaultGroup(value) {\n\t\t\tif (value && value.length > 0) {\n\t\t\t\t// setting new user default group to the current selected one\n\t\t\t\tlet currentGroup = this.groups.find(group => group.id === value);\n\t\t\t\tif (currentGroup) {\n\t\t\t\t\tthis.newUser.groups = [currentGroup];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// fallback, empty selected group\n\t\t\tthis.newUser.groups = [];\n\t\t},\n\n\t\t/**\n\t\t * Create a new group\n\t\t * \n\t\t * @param {string} groups Group id\n\t\t * @returns {Promise}\n\t\t */\n\t\tcreateGroup(gid) {\n\t\t\tthis.loading.groups = true;\n\t\t\tthis.$store.dispatch('addGroup', gid)\n\t\t\t\t.then((group) => {\n\t\t\t\t\tthis.newUser.groups.push(this.groups.find(group => group.id === gid))\n\t\t\t\t\tthis.loading.groups = false;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loading.groups = false;\n\t\t\t\t});\n\t\t\treturn this.$store.getters.getGroups[this.groups.length];\n\t\t}\n\t}\n}\n</script>\n","import { render, staticRenderFns } from \"./userList.vue?vue&type=template&id=40745299&\"\nimport script from \"./userList.vue?vue&type=script&lang=js&\"\nexport * from \"./userList.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"src/components/userList.vue\"\nexport default component.exports","<!--\n  - @copyright Copyright (c) 2018 John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @author John Molakvoæ <skjnldsv@protonmail.com>\n  -\n  - @license GNU AGPL version 3 or any later version\n  -\n  - This program is free software: you can redistribute it and/or modify\n  - it under the terms of the GNU Affero General Public License as\n  - published by the Free Software Foundation, either version 3 of the\n  - License, or (at your option) any later version.\n  -\n  - This program is distributed in the hope that it will be useful,\n  - but WITHOUT ANY WARRANTY; without even the implied warranty of\n  - MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n  - GNU Affero General Public License for more details.\n  -\n  - You should have received a copy of the GNU Affero General Public License\n  - along with this program. If not, see <http://www.gnu.org/licenses/>.\n  -\n  -->\n\n<template>\n\t<AppContent app-name=\"settings\">\n\t\t<template slot=\"navigation\">\n\t\t\t<AppNavigationNew button-id=\"new-user-button\" :text=\"t('settings','New user')\" button-class=\"icon-add\" @click=\"toggleNewUserMenu\" />\n\t\t\t<ul id=\"usergrouplist\">\n\t\t\t\t<AppNavigationItem v-for=\"item in menu\" :key=\"item.key\" :item=\"item\" />\n\t\t\t</ul>\n\t\t\t<AppNavigationSettings>\n\t\t\t\t<div>\n\t\t\t\t\t<p>{{t('settings', 'Default quota:')}}</p>\n\t\t\t\t\t<multiselect :value=\"defaultQuota\" :options=\"quotaOptions\"\n\t\t\t\t\t\t\t\t tag-placeholder=\"create\" :placeholder=\"t('settings', 'Select default quota')\"\n\t\t\t\t\t\t\t\t label=\"label\" track-by=\"id\" class=\"multiselect-vue\"\n\t\t\t\t\t\t\t\t :allowEmpty=\"false\" :taggable=\"true\"\n\t\t\t\t\t\t\t\t @tag=\"validateQuota\" @input=\"setDefaultQuota\">\n\t\t\t\t\t</multiselect>\n\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"checkbox\" id=\"showLanguages\" class=\"checkbox\" v-model=\"showLanguages\">\n\t\t\t\t\t<label for=\"showLanguages\">{{t('settings', 'Show Languages')}}</label>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"checkbox\" id=\"showLastLogin\" class=\"checkbox\" v-model=\"showLastLogin\">\n\t\t\t\t\t<label for=\"showLastLogin\">{{t('settings', 'Show last login')}}</label>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"checkbox\" id=\"showUserBackend\" class=\"checkbox\" v-model=\"showUserBackend\">\n\t\t\t\t\t<label for=\"showUserBackend\">{{t('settings', 'Show user backend')}}</label>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<input type=\"checkbox\" id=\"showStoragePath\" class=\"checkbox\" v-model=\"showStoragePath\">\n\t\t\t\t\t<label for=\"showStoragePath\">{{t('settings', 'Show storage path')}}</label>\n\t\t\t\t</div>\n\t\t\t</AppNavigationSettings>\n\t\t</template>\n\t\t<template slot=\"content\">\n\t\t\t<user-list :users=\"users\" :showConfig=\"showConfig\" :selectedGroup=\"selectedGroup\" :externalActions=\"externalActions\" />\n\t\t</template>\n\t</AppContent>\n</template>\n\n<script>\nimport {\n\tAppContent,\n\tAppNavigationItem,\n\tAppNavigationNew,\n\tAppNavigationSettings,\n} from 'nextcloud-vue';\nimport userList from '../components/userList';\nimport Vue from 'vue';\nimport VueLocalStorage from 'vue-localstorage'\nimport Multiselect from 'vue-multiselect';\nimport api from '../store/api';\n\nVue.use(VueLocalStorage)\n\nexport default {\n\tname: 'Users',\n\tprops: ['selectedGroup'],\n\tcomponents: {\n\t\tAppContent,\n\t\tAppNavigationItem,\n\t\tAppNavigationNew,\n\t\tAppNavigationSettings,\n\t\tuserList,\n\t\tMultiselect,\n\t},\n\tbeforeMount() {\n\t\tthis.$store.commit('initGroups', {\n\t\t\tgroups: this.$store.getters.getServerData.groups, \n\t\t\torderBy: this.$store.getters.getServerData.sortGroups,\n\t\t\tuserCount: this.$store.getters.getServerData.userCount\n\t\t});\n\t\tthis.$store.dispatch('getPasswordPolicyMinLength');\n\t},\n\tcreated() {\n\t\t// init the OCA.Settings.UserList object\n\t\t// and add the registerAction method\n\t\tObject.assign(OCA, {\n\t\t\tSettings: {\n\t\t\t\tUserList: {\n\t\t\t\t\tregisterAction: this.registerAction\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\tdata() {\n\t\treturn {\n\t\t\t// default quota is set to unlimited\n\t\t\tunlimitedQuota: {id: 'none', label: t('settings', 'Unlimited')},\n\t\t\t// temporary value used for multiselect change\n\t\t\tselectedQuota: false,\n\t\t\texternalActions: [],\n\t\t\tshowAddGroupEntry: false,\n\t\t\tloadingAddGroup: false,\n\t\t\tshowConfig: {\n\t\t\t\tshowStoragePath: false,\n\t\t\t\tshowUserBackend: false,\n\t\t\t\tshowLastLogin: false,\n\t\t\t\tshowNewUserForm: false,\n\t\t\t\tshowLanguages: false\n\t\t\t}\n\t\t}\n\t},\n\tmethods: {\n\t\ttoggleNewUserMenu() {\n\t\t\tthis.showConfig.showNewUserForm = !this.showConfig.showNewUserForm;\n\t\t\tif (this.showConfig.showNewUserForm) {\n\t\t\t\tVue.nextTick(() => {\n\t\t\t\t\twindow.newusername.focus();\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\t\tgetLocalstorage(key) {\n\t\t\t// force initialization\n\t\t\tlet localConfig = this.$localStorage.get(key);\n\t\t\t// if localstorage is null, fallback to original values\n\t\t\tthis.showConfig[key] = localConfig !== null ? localConfig === 'true' : this.showConfig[key];\n\t\t\treturn this.showConfig[key];\n\t\t},\n\t\tsetLocalStorage(key, status) {\n\t\t\tthis.showConfig[key] = status;\n\t\t\tthis.$localStorage.set(key, status);\n\t\t\treturn status;\n\t\t},\n\t\tremoveGroup(groupid) {\n\t\t\tlet self = this;\n\t\t\t// TODO migrate to a vue js confirm dialog component \n\t\t\tOC.dialogs.confirm(\n\t\t\t\tt('settings', 'You are about to remove the group {group}. The users will NOT be deleted.', {group: groupid}),\n\t\t\t\tt('settings','Please confirm the group removal '),\n\t\t\t\tfunction (success) {\n\t\t\t\t\tif (success) {\n\t\t\t\t\t\tself.$store.dispatch('removeGroup', groupid);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t},\n\n\t\t/**\n\t\t * Dispatch default quota set request\n\t\t * \n\t\t * @param {string|Object} quota Quota in readable format '5 GB' or Object {id: '5 GB', label: '5GB'}\n\t\t * @returns {string}\n\t\t */\n\t\tsetDefaultQuota(quota = 'none') {\n\t\t\tthis.$store.dispatch('setAppConfig', {\n\t\t\t\tapp: 'files',\n\t\t\t\tkey: 'default_quota',\n\t\t\t\t// ensure we only send the preset id\n\t\t\t\tvalue: quota.id ? quota.id : quota\n\t\t\t}).then(() => {\n\t\t\t\tif (typeof quota !== 'object') {\n\t\t\t\t\tquota = {id: quota, label: quota};\n\t\t\t\t}\n\t\t\t\tthis.defaultQuota = quota;\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * Validate quota string to make sure it's a valid human file size\n\t\t * \n\t\t * @param {string} quota Quota in readable format '5 GB'\n\t\t * @returns {Promise|boolean}\n\t\t */\n\t\tvalidateQuota(quota) {\n\t\t\t// only used for new presets sent through @Tag\n\t\t\tlet validQuota = OC.Util.computerFileSize(quota);\n\t\t\tif (validQuota === 0) {\n\t\t\t\treturn this.setDefaultQuota('none');\n\t\t\t} else if (validQuota !== null) {\n\t\t\t\t// unify format output\n\t\t\t\treturn this.setDefaultQuota(OC.Util.humanFileSize(OC.Util.computerFileSize(quota)));\n\t\t\t}\n\t\t\t// if no valid do not change\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Register a new action for the user menu\n\t\t * \n\t\t * @param {string} icon the icon class\n\t\t * @param {string} text the text to display\n\t\t * @param {function} action the function to run\n\t\t */\n\t\tregisterAction(icon, text, action) {\n\t\t\tthis.externalActions.push({\n\t\t\t\ticon: icon,\n\t\t\t\ttext: text,\n\t\t\t\taction: action\n\t\t\t});\n\t\t\treturn this.externalActions;\n\t\t},\n\n\t\t/**\n\t\t * Create a new group\n\t\t * \n\t\t * @param {Object} event The form submit event\n\t\t */\n\t\tcreateGroup(event) {\n\t\t\tlet gid = event.target[0].value;\n\t\t\tthis.loadingAddGroup = true;\n\t\t\tthis.$store.dispatch('addGroup', gid)\n\t\t\t\t.then(() => {\n\t\t\t\t\tthis.showAddGroupEntry = false;\n\t\t\t\t\tthis.loadingAddGroup = false;\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tthis.loadingAddGroup = false;\n\t\t\t\t});\n\t\t}\n\t},\n\tcomputed: {\n\t\tusers() {\n\t\t\treturn this.$store.getters.getUsers;\n\t\t},\n\t\tloading() {\n\t\t\treturn Object.keys(this.users).length === 0;\n\t\t},\n\t\tusersOffset() {\n\t\t\treturn this.$store.getters.getUsersOffset;\n\t\t},\n\t\tusersLimit() {\n\t\t\treturn this.$store.getters.getUsersLimit;\n\t\t},\n\n\t\t// Local settings\n\t\tshowLanguages: {\n\t\t\tget: function() {return this.getLocalstorage('showLanguages')},\n\t\t\tset: function(status) {\n\t\t\t\tthis.setLocalStorage('showLanguages', status);\n\t\t\t}\n\t\t},\n\t\tshowLastLogin: {\n\t\t\tget: function() {return this.getLocalstorage('showLastLogin')},\n\t\t\tset: function(status) {\n\t\t\t\tthis.setLocalStorage('showLastLogin', status);\n\t\t\t}\n\t\t},\n\t\tshowUserBackend: {\n\t\t\tget: function() {return this.getLocalstorage('showUserBackend')},\n\t\t\tset: function(status) {\n\t\t\t\tthis.setLocalStorage('showUserBackend', status);\n\t\t\t}\n\t\t},\n\t\tshowStoragePath: {\n\t\t\tget: function() {return this.getLocalstorage('showStoragePath')},\n\t\t\tset: function(status) {\n\t\t\t\tthis.setLocalStorage('showStoragePath', status);\n\t\t\t}\n\t\t},\n\n\t\tuserCount() {\n\t\t\treturn this.$store.getters.getUserCount;\n\t\t},\n\t\tsettings() {\n\t\t\treturn this.$store.getters.getServerData;\n\t\t},\n\n\t\t// default quota\n\t\tquotaOptions() {\n\t\t\t// convert the preset array into objects\n\t\t\tlet quotaPreset = this.settings.quotaPreset.reduce((acc, cur) => acc.concat({id:cur, label:cur}), []);\n\t\t\t// add default presets\n\t\t\tquotaPreset.unshift(this.unlimitedQuota);\n\t\t\treturn quotaPreset;\n\t\t},\n\t\t// mapping saved values to objects\n\t\tdefaultQuota: {\n\t\t\tget: function() {\n\t\t\t\tif (this.selectedQuota !== false) {\n\t\t\t\t\treturn this.selectedQuota;\n\t\t\t\t}\n\t\t\t\tif (OC.Util.computerFileSize(this.settings.defaultQuota) > 0) {\n\t\t\t\t\t// if value is valid, let's map the quotaOptions or return custom quota\n\t\t\t\t\treturn {id:this.settings.defaultQuota, label:this.settings.defaultQuota};\n\t\t\t\t}\n\t\t\t\treturn this.unlimitedQuota; // unlimited\n\t\t\t},\n\t\t\tset: function(quota) {\n\t\t\t\tthis.selectedQuota =  quota;\n\t\t\t}\n\t\t\t\n\t\t},\n\n\t\t// BUILD APP NAVIGATION MENU OBJECT\n\t\tmenu() {\n\t\t\t// Data provided php side\n\t\t\tlet self = this;\n\t\t\tlet groups = this.$store.getters.getGroups;\n\t\t\tgroups = Array.isArray(groups) ? groups : [];\n\n\t\t\t// Map groups\n\t\t\tgroups = groups.map(group => {\n\t\t\t\tlet item = {};\n\t\t\t\titem.id = group.id.replace(' ', '_');\n\t\t\t\titem.key = item.id;\n\t\t\t\titem.utils = {}\n\n\t\t\t\t// router link to\n\t\t\t\titem.router = {\n\t\t\t\t\tname: 'group',\n\t\t\t\t\tparams: {selectedGroup: group.id}\n\t\t\t\t};\n\n\t\t\t\t// group name\n\t\t\t\titem.text = group.name;\n\n\t\t\t\t// users count for all groups\n\t\t\t\tif (group.usercount - group.disabled > 0 || group.usercount === -1) {\n\t\t\t\t\titem.utils.counter = group.usercount - group.disabled;\n\t\t\t\t}\n\n\t\t\t\tif (item.id !== 'admin' && item.id !== 'disabled' && this.settings.isAdmin) {\n\t\t\t\t\t// add delete button on real groups\n\t\t\t\t\titem.utils.actions = [{\n\t\t\t\t\t\ticon: 'icon-delete',\n\t\t\t\t\t\ttext: t('settings', 'Remove group'),\n\t\t\t\t\t\taction: function() {\n\t\t\t\t\t\t\tself.removeGroup(group.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t}];\n\t\t\t\t};\n\t\t\t\treturn item;\n\t\t\t});\n\n\t\t\t// Every item is added on top of the array, so we're going backward\n\t\t\t// Groups, separator, disabled, admin, everyone\n\n\t\t\t// Add separator\n\t\t\tlet realGroups = groups.find((group) => {return group.id !== 'disabled' && group.id !== 'admin'});\n\t\t\trealGroups = typeof realGroups === 'undefined' ? [] : realGroups;\n\t\t\trealGroups = Array.isArray(realGroups) ? realGroups : [realGroups];\n\t\t\tif (realGroups.length > 0) {\n\t\t\t\tlet separator = {\n\t\t\t\t\tcaption: true,\n\t\t\t\t\ttext: t('settings', 'Groups')\n\t\t\t\t};\n\t\t\t\tgroups.unshift(separator);\n\t\t\t}\n\n\t\t\t// Adjust admin and disabled groups\n\t\t\tlet adminGroup = groups.find(group => group.id == 'admin');\n\t\t\tlet disabledGroup = groups.find(group => group.id == 'disabled');\n\n\t\t\t// filter out admin and disabled\n\t\t\tgroups = groups.filter(group => ['admin', 'disabled'].indexOf(group.id) === -1);\n\n\t\t\tif (adminGroup && adminGroup.text) {\n\t\t\t\tadminGroup.text = t('settings', 'Admins');\t// rename admin group\n\t\t\t\tadminGroup.icon = 'icon-user-admin';\t\t// set icon\n\t\t\t\tgroups.unshift(adminGroup);\t\t\t\t\t// add admin group if present\n\t\t\t}\n\t\t\tif (disabledGroup && disabledGroup.text) {\n\t\t\t\tdisabledGroup.text = t('settings', 'Disabled users');\t// rename disabled group\n\t\t\t\tdisabledGroup.icon = 'icon-disabled-users';\t\t\t\t// set icon\n\t\t\t\tif (disabledGroup.utils && (\n\t\t\t\t\t   disabledGroup.utils.counter > 0\t\t\t\t\t// add disabled if not empty \n\t\t\t\t\t|| disabledGroup.utils.counter === -1)\t\t\t\t// add disabled if ldap enabled \n\t\t\t\t) {\n\t\t\t\t\tgroups.unshift(disabledGroup);\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\t// Add everyone group\n\t\t\tlet everyoneGroup = {\n\t\t\t\tid: 'everyone',\n\t\t\t\tkey: 'everyone',\n\t\t\t\ticon: 'icon-contacts-dark',\n\t\t\t\trouter: {name:'users'},\n\t\t\t\ttext: t('settings', 'Everyone'),\n\t\t\t};\n\t\t\t// users count\n\t\t\tif (this.userCount > 0) {\n\t\t\t\tVue.set(everyoneGroup, 'utils', {\n\t\t\t\t\tcounter: this.userCount\n\t\t\t\t});\n\t\t\t}\n\t\t\tgroups.unshift(everyoneGroup);\n\n\t\t\tlet addGroup = {\n\t\t\t\tid: 'addgroup',\n\t\t\t\tkey: 'addgroup',\n\t\t\t\ticon: 'icon-add',\n\t\t\t\ttext: t('settings', 'Add group'),\n\t\t\t\tclasses: this.loadingAddGroup ? 'icon-loading-small' : ''\n\t\t\t};\n\t\t\tif (this.showAddGroupEntry) {\n\t\t\t\tVue.set(addGroup, 'edit', {\n\t\t\t\t\ttext: t('settings', 'Add group'),\n\t\t\t\t\taction: this.createGroup,\n\t\t\t\t\treset: function() {\n\t\t\t\t\t\tself.showAddGroupEntry = false\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\taddGroup.classes = 'editing';\n\t\t\t} else {\n\t\t\t\tVue.set(addGroup, 'action', function() {\n\t\t\t\t\tself.showAddGroupEntry = true\n\t\t\t\t})\n\t\t\t}\n\t\t\tgroups.unshift(addGroup);\n\n\t\t\treturn groups;\n\t\t},\n\t}\n}\n</script>\n","import mod from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/babel-loader/lib/index.js!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Users.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Users.vue?vue&type=template&id=68be103e&\"\nimport script from \"./Users.vue?vue&type=script&lang=js&\"\nexport * from \"./Users.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\ncomponent.options.__file = \"src/views/Users.vue\"\nexport default component.exports"],"sourceRoot":""}